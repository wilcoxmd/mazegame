{"version":3,"sources":["images/goomba.png","components/Square.js","components/Row.js","components/Game.js","App.js","serviceWorker.js","index.js","images/Paper-Mario-icon.png"],"names":["module","exports","__webpack_require__","p","Square","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rowIndex","colIndex","isPlayerLoc","isSpriteLoc","inherits","createClass","key","value","prevProps","prevState","setState","playerLoc","playerRow","playerCol","thisRow","thisCol","spriteLocs","myLocString","concat","i","length","join","updateSprites","bi","goomba","mario","react_default","a","createElement","style","border","backgroundColor","backgroundImage","backgroundSize","overflow","width","height","className","activeClass","React","Component","Row","apply","arguments","nextProps","nextState","index","size","row","push","Square_Square","toString","display","flexDirection","justifyContent","Game","undefined","totalMoves","hanldeArrowPress","bind","assertThisInitialized","startingLoc","Math","floor","random","spriteSet","Set","spriteRow","spriteCol","spriteLoc","has","add","spriteLocsArr","toConsumableArray","map","element","split","j","parseInt","playerLocString","newLocs","Array","from","splice","console","log","setupNewGame","e","window","event","loc","col","tm","keyCode","playingGame","alert","handleGameOver","cols","document","onkeydown","Row_Row","App","prompt","Game_Game","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22921c15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goomba.f5af6c3f.png\";","import React from \"react\";\nimport mario from \"../images/Paper-Mario-icon.png\";\nimport goomba from \"../images/goomba.png\";\n\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rowIndex: this.props.rowIndex,\n      colIndex: this.props.colIndex,\n      isPlayerLoc: false,\n      isSpriteLoc: false\n    };\n  }\n\n  updateSprites(prevProps, prevState) {\n    if (prevState && prevState.isPlayerLoc) {\n      this.setState({ isPlayerLoc: false });\n    }\n\n    if (this.props.playerLoc) {\n      const playerRow = this.props.playerLoc[0];\n      const playerCol = this.props.playerLoc[1];\n      const thisRow = this.props.rowIndex;\n      const thisCol = this.props.colIndex;\n\n      if (\n        thisRow === playerRow &&\n        thisCol === playerCol &&\n        this.state.isPlayerLoc !== true //important, prevents continuous re-render\n      ) {\n        this.setState({ isPlayerLoc: true });\n        if (this.state.isSpriteLoc) {\n          this.setState({ isSpriteLoc: false });\n        }\n      }\n    }\n\n    if (this.props.spriteLocs) {\n      const spriteLocs = this.props.spriteLocs;\n      const myLocString = `${this.props.rowIndex},${this.props.colIndex}`;\n      for (let i = 0; i < spriteLocs.length; i++) {\n        if (\n          spriteLocs[i].join(\",\") === myLocString &&\n          this.state.isSpriteLoc !== true\n        ) {\n          this.setState({ isSpriteLoc: true });\n          break;\n        }\n\n        if (\n          spriteLocs[i].join(\",\") === myLocString &&\n          this.state.isSpriteLoc === true &&\n          this.state.isPlayerLoc === true\n        ) {\n          this.setState({ isSpriteLoc: false });\n        }\n      }\n    }\n  }\n\n  componentDidMount(prevProps, prevState) {\n    this.updateSprites(prevProps, prevState);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateSprites(prevProps, prevState);\n  }\n\n  render() {\n    let bi;\n    bi = this.state.isSpriteLoc ? goomba : \"\";\n    bi = this.state.isPlayerLoc ? mario : bi;\n\n    return (\n      <div\n        style={{\n          border: \"1px solid grey\",\n          backgroundColor: \"white\",\n          backgroundImage: `url(\"${bi}\")`,\n          backgroundSize: \"cover\",\n          overflow: \"hidden\",\n          width: 40,\n          height: 40\n        }}\n        className={this.activeClass}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Square } from \"./Square\";\n\nexport class Row extends React.Component {\n  //only update a row if we need to. improves performance\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      !this.props.playerLoc || //game just started and we don't yet have a player location\n      nextProps.playerLoc[0] === this.props.index || //the player location will be moving into this row\n      this.props.index === this.props.playerLoc[0] //the player location is currently in this row\n    );\n  }\n\n  render() {\n    const size = this.props.size;\n    const row = [];\n    for (let i = 0; i < size[1]; i++) {\n      row.push(\n        <Square\n          rowIndex={this.props.index}\n          colIndex={i}\n          playerLoc={this.props.playerLoc}\n          spriteLocs={this.props.spriteLocs}\n          key={[this.props.index, i].toString()}\n        />\n      );\n    }\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        }}\n        className=\"row\"\n      >\n        {row}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row } from \"./Row\";\n\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playerLoc: undefined,\n      spriteLocs: undefined,\n      totalMoves: 0\n    };\n\n    this.hanldeArrowPress = this.hanldeArrowPress.bind(this);\n  }\n\n  setupNewGame() {\n    const width = this.props.size[0];\n    const height = this.props.size[1];\n\n    let startingLoc = [\n      Math.floor(Math.random() * width),\n      Math.floor(Math.random() * height)\n    ];\n\n    let spriteSet = new Set();\n    for (let i = 0; i < this.props.size[0]; i++) {\n      const spriteRow = Math.floor(Math.random() * this.props.size[0]);\n      const spriteCol = Math.floor(Math.random() * this.props.size[0]);\n      const spriteLoc = `${spriteRow},${spriteCol}`; //needs to be string to add to set and check values\n      if (\n        spriteSet.has(spriteLoc) ||\n        (spriteRow === startingLoc[0] && spriteCol === startingLoc[1])\n      ) {\n        i--;\n      } else {\n        spriteSet.add(spriteLoc);\n      }\n    }\n    let spriteLocs = [...spriteSet];\n    let spriteLocsArr = spriteLocs.map(element => {\n      element = element.split(\",\");\n      for (let j = 0; j < element.length; j++) {\n        element[j] = parseInt(element[j]);\n      }\n      return element;\n    });\n\n    this.setState({ playerLoc: startingLoc, spriteLocs: spriteLocsArr });\n  }\n\n  componentDidUpdate() {\n    if (\n      !this.state.playerLoc &&\n      this.props.size[0] !== 0 &&\n      this.props.size[1] !== 0\n    ) {\n      this.setupNewGame();\n    } else {\n      if (this.state.spriteLocs) {\n        let spriteLocs = this.state.spriteLocs;\n        let playerLocString = this.state.playerLoc.join(\",\");\n        for (let i = 0; i < spriteLocs.length; i++) {\n          if (playerLocString === spriteLocs[i].join(\",\")) {\n            const newLocs = Array.from(this.state.spriteLocs);\n            newLocs.splice(i, 1);\n            this.setState({ spriteLocs: newLocs });\n            console.log(\"removed sprite!\");\n          }\n        }\n      }\n    }\n  }\n\n  hanldeArrowPress(e) {\n    e = e || window.event;\n    let loc = this.state.playerLoc;\n    let row = loc[0];\n    let col = loc[1];\n    let tm = this.state.totalMoves;\n\n    if (e.keyCode === 38) {\n      // up arrow\n      console.log(\"up!\");\n      row--;\n      if (row <= -1) row = this.props.size[0] - 1;\n    } else if (e.keyCode === 40) {\n      // down arrow\n      console.log(\"down!\");\n      row++;\n      if (row >= this.props.size[0]) row = 0;\n    } else if (e.keyCode === 37) {\n      // left arrow\n      console.log(\"left!\");\n      col--;\n      if (col <= -1) col = this.props.size[1] - 1;\n    } else if (e.keyCode === 39) {\n      // right arrow\n      console.log(\"right!\");\n      col++;\n      if (col >= this.props.size[1]) col = 0;\n    }\n\n    this.setState({ playerLoc: [row, col], totalMoves: ++tm });\n  }\n\n  render() {\n    if (\n      this.state.spriteLocs &&\n      this.state.spriteLocs.length === 0 &&\n      this.props.playingGame\n    ) {\n      alert(\n        `Game over. Total moves to save princess: ${this.state.totalMoves}`\n      );\n      this.props.handleGameOver();\n    }\n\n    const size = this.props.size;\n    let cols = [];\n\n    document.onkeydown = this.hanldeArrowPress;\n\n    for (let i = 0; i < size[0]; i++) {\n      cols.push(\n        <Row\n          size={this.props.size}\n          index={i}\n          playerLoc={this.state.playerLoc}\n          spriteLocs={this.state.spriteLocs}\n        />\n      );\n    }\n\n    return <div>{cols}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Game } from \"./components/Game\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playingGame: false,\n      size: [0, 0]\n    };\n  }\n\n  handleGameOver = () => {\n    this.setState({ playingGame: false });\n  };\n\n  componentDidMount() {\n    if (!this.state.playingGame) {\n      const width = window.prompt(\"input game board width\");\n      const height = window.prompt(\"input game board height\");\n\n      this.setState({\n        playingGame: true,\n        size: [parseInt(width), parseInt(height)]\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Game\n          size={this.state.size}\n          startingLoc={this.state.startingLoc}\n          handleGameOver={this.handleGameOver}\n          playingGame={this.state.playingGame}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Paper-Mario-icon.c98f0c23.png\";"],"sourceRoot":""}